.. _plasmapy-install:

*******************
Installing PlasmaPy
*******************

.. note::

   If you would like to contribute to PlasmaPy, please see the
   development guide.

Requirements
============

PlasmaPy requires Python version 3.6 or newer, and is not compatible
with Python 2.7.  PlasmaPy requires the following packages for
installation:

- NumPy 1.13 or newer
- SciPy 0.19 or newer
- Astropy 2.0 or newer
- mpmath 1.0 or newer
- h5py 2.8 or newer
- lmfit 0.9.7 or newer
- matplotlib 2.0 or newer
- Cython 0.27.2 or newer
- colorama 0.3 or newer

.. _installation:

Installation
============

.. _create-conda-env:

Creating a conda environment
----------------------------

We highly recommend installing PlasmaPy from a Python environment
created using conda.  Conda environments have the advantage that...

.. _install-pip:

Installation with pip
---------------------

To install the most recent release of PlasmaPy `on PyPI`_ with `pip
<https://pip.pypa.io/en/stable/>`_ into an existing Python environment,
run

.. code:: bash

   pip install plasmapy

.. note::

   We highly recommend installing PlasmaPy after creating an Anaconda
   environment for Python.

.. _install-conda:

Installation with conda
-----------------------

We’re not on conda just yet, but we’re working on it!

Building and installing from source code
========================================

Prerequisites
-------------

Building PlasmaPy from source requires a C compiler such as
`gcc <https://gcc.gnu.org/>`_ so that code generated by
`Cython <http://cython.org/>`_ may be compiled.

Obtaining source code
---------------------

Stable release
^^^^^^^^^^^^^^

The most recent stable release of PlasmaPy can be `downloaded from
PyPI <https://pypi.org/project/plasmapy/>`_.

Development version on GitHub
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

If you have `git <https://git-scm.com/>`_ installed on your computer,
you may clone `PlasmaPy's GitHub repository`_ and access source code
from the most recent development version by running:

.. code:: bash

   git clone https://github.com/PlasmaPy/PlasmaPy.git

The above command uses HTTPS, which is the default protocol and easier
to set up.  If you have `set up an SSH key`_, then an equivalent and
more secure command is:

.. code:: bash

   git clone git@github.com:PlasmaPy/PlasmaPy.git

If you do not have git installed on your computer, then you may download
the source code from `PlasmaPy's GitHub repository`_ by selecting "Clone
or Download", which will give you the option to download a zip file.

.. note::

   The :ref:`contributing-to-plasmapy` guide has instructions on how to
   fork a repository so that you may make pull requests.

Building and installing
-----------------------

In the top level directory, run

.. code:: bash

   pip install .

or

.. code:: bash

   python setup.py install

Building documentation
----------------------

.. note::

   These instructions still need to be written.

Testing a source code build
---------------------------

In the top level directory, run

.. code:: bash

   python setup.py test

.. _PlasmaPy's GitHub repository: https://github.com/PlasmaPy/PlasmaPy
.. _set up an SSH key: https://help.github.com/articles/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent/
.. _on PyPI: https://pypi.org/project/plasmapy/
