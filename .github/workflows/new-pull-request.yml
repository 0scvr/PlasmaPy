name: add comment

on:
  pull_request_target:
    types: [opened]

jobs:
  name: Greetings
  on: [pull_request_target]

  jobs:
    greeting:
      runs-on: ubuntu-latest
      permissions:
        issues: write
        pull-requests: write
      steps:
      - uses: actions/first-interaction@v1
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          pr-message: >
            Thank you for submitting your first pull request (PR) to PlasmaPy!  We invite you to check out our [**Code of Conduct**](https://docs.plasmapy.org/en/stable/CODE_OF_CONDUCT.html) and [**contributor guide**](https://docs.plasmapy.org/en/latest/contributing/index.html). ðŸ¥³

            Please **add yourself to the list of contributors** by modifying [docs/about/credits.rst](https://github.com/PlasmaPy/PlasmaPy/blob/main/docs/about/credits.rst) in your PR to make sure that you get credit for your contribution. ðŸ”–

            We thank you once again! ðŸŽ†

  checklist:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: `Thank you for contributing! âœ¨ PlasmaPy's future depends on contributors like you, so we deeply appreciate it! ðŸŒ±

            [**contributor guide**]:
            [Getting ready to contribute]:
            [code contribution workflow]:
            [coding tips and guidelines]:
            [Writing documentation]:
            [documentation troubleshooting]:
            [Writing tests]:
            [add a changelog entry]:
            [online documentation]: https://docs.plasmapy/org/en/latest

            The bottom of this page includes several checks that are run for every PR. Don't worry if something broke! We break stuff all the time. ðŸ˜º Click on "Details" to learn why a check didn't pass. Because error messages are sometimes cryptic ðŸ¤”, please feel free to ask for help. We do that all the time as well. ðŸŒ¸ We can usually be reached in our [**chat room**](https://docs.plasmapy.org/en/latest/contributing/coding_guide.html) or weekly [**community meeting**](https://www.plasmapy.org/meetings/weekly) & [**office hours**]((https://www.plasmapy.org/meetings/office_hours).

            Please check out our [**contributor guide**](https://docs.plasmapy.org/en/latest/contributing/index.html) to learn more about:

             - [Getting ready to contribute](https://docs.plasmapy.org/en/latest/contributing/getting_ready.html#getting-ready-to-contribute)
             - The [code contribution workflow](https://docs.plasmapy.org/en/latest/contributing/workflow.html#code-contribution-workflow)
             - Using [\`astropy.units\`](https://docs.plasmapy.org/en/latest/notebooks/getting_started/units.html#Using-Astropy-Units) and [\`plasmapy.particles\`](https://docs.plasmapy.org/en/latest/notebooks/getting_started/particles.html#Using-PlasmaPy-Particles)
             - [Coding tips and guidelines](https://docs.plasmapy.org/en/latest/contributing/coding_guide.html#coding-guide)
             - [Writing documentation](https://docs.plasmapy.org/en/latest/contributing/doc_guide.html#writing-documentation) (in [reStructuredText](https://www.sphinx-doc.org/en/master/usage/restructuredtext/basics.html#restructuredtext-primer) using the [numpydoc style](https://numpydoc.readthedocs.io/en/latest/format.html#docstring-standard)).
             - [Writing tests](https://docs.plasmapy.org/en/latest/contributing/testing_guide.html#testing-guide)
             - [Adding a changelog entry](https://docs.plasmapy.org/en/latest/contributing/changelog_guide.html#adding-a-changelog-entry) (needed except for minor changes)

            Some suggestions:

             - Try fixing *CI / Python 3.11* test failures first.
             - Most *pre-commit.ci* failures can be automagically fixed by commenting \`pre-commit.ci autofix\` below, followed by a \`git pull\`.
             - For cryptic *CI / Documentation* failures, see our [documentation troubleshooting guide](https://docs.plasmapy.org/en/latest/contributing/doc_guide.html#troubleshooting).
             - Use [\`@particle_input\`](https://docs.plasmapy.org/en/latest/api/plasmapy.particles.decorators.particle_input.html#particle-input) for functions that accept particles as arguments and [\`@validate_quantities\`] for functions that accept [\`Quantity\`] objects.
             - Please use SI units within PlasmaPy, except when there is strong justification otherwise.

            We thank you once again!

          })
